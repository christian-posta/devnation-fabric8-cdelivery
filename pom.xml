<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.redhat.summit.demo</groupId>
  <artifactId>cdelivery-installer</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Summit Continuous Delivery Demo :: Installer</name>

  <properties>
    <fabric8.version>2.2.0</fabric8.version>

    <recreate>false</recreate>
    <domain>${env.KUBERNETES_DOMAIN}</domain>

    <!-- lets combine dependent kubernetes json files -->
    <fabric8.combineDependencies>true</fabric8.combineDependencies>

    <!-- allow build not to barf in the root directory -->
    <fabric8.failOnMissingJsonFiles>false</fabric8.failOnMissingJsonFiles>

    <!-- lets set some smart defaults -->
    <fabric8.recreate>${recreate}</fabric8.recreate>
    <fabric8.domain>${domain}</fabric8.domain>

    <fabric8.apply.DOMAIN>${domain}</fabric8.apply.DOMAIN>
    <fabric8.serviceAccount>fabric8</fabric8.serviceAccount>
    <fabric8.apply.GOGS_SERVER_DOMAIN>gogs.${domain}</fabric8.apply.GOGS_SERVER_DOMAIN>
    <fabric8.apply.GOGS_SERVER_DOMAIN>gogs.${domain}</fabric8.apply.GOGS_SERVER_DOMAIN>
  </properties>

  <build>
    <defaultGoal>install</defaultGoal>

    <plugins>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-maven-plugin</artifactId>
        <version>${fabric8.version}</version>
        <executions>
          <execution>
            <id>json</id>
            <phase>compile</phase>
            <goals>
              <goal>json</goal>
            </goals>
          </execution>
          <execution>
            <id>apply</id>
            <phase>package</phase>
            <goals>
              <goal>apply</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <id>enforce-property</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>domain</property>
                  <message>
                    -----------------------------------------------------------------------------------------------------


                    Missing Property: domain
                    ========================

                    To install on kubernetes you must set a property called `domain` for the domain you wish to deploy
                    to.
                    e.g. `vagrant.local`.

                    The domain is then used as a suffix on host names and haproxy routes.
                    e.g. the console would appear at `fabric8.vagrant.local`.

                    You can do this either by passing the domain on the command line:
                    mvn compile -Ddomain=vagrant.local

                    Or via the $KUBERNETES_DOMAIN environment variable:
                    export KUBERNETES_DOMAIN=vagrant.local


                    -----------------------------------------------------------------------------------------------------

                  </message>
                </requireProperty>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


  <profiles>
	<profile>
		<id>console</id>
		<dependencies>
			<!-- Base Hawtio/Fabric8 Console-->
		    <dependency>
		      <groupId>io.fabric8.apps</groupId>
		      <artifactId>base</artifactId>
		      <version>${fabric8.version}</version>
		      <classifier>kubernetes</classifier>
		      <type>json</type>
		    </dependency>

		    <!-- Logging / Elastic search-->
		    <dependency>
		      <groupId>io.fabric8.apps</groupId>
		      <artifactId>logging</artifactId>
		      <version>${fabric8.version}</version>
		      <classifier>kubernetes</classifier>
		      <type>json</type>
		      <exclusions>
		        <exclusion>
		          <groupId>io.fabric8.apps</groupId>
		          <artifactId>base</artifactId>
		        </exclusion>
		      </exclusions>
		    </dependency>
		</dependencies>
	</profile>
    <profile>
      <id>cd-social</id>
      <dependencies>
        <!-- CD social -->
        <dependency>
          <groupId>io.fabric8.jube.images.fabric8</groupId>
          <artifactId>hubot-notifier</artifactId>
          <version>${fabric8.version}</version>
          <classifier>kubernetes</classifier>
          <type>json</type>
        </dependency>
        <dependency>
          <groupId>io.fabric8.jube.images.fabric8</groupId>
          <artifactId>letschat</artifactId>
          <version>${fabric8.version}</version>
          <classifier>kubernetes</classifier>
          <type>json</type>
        </dependency>
        <dependency>
          <groupId>io.fabric8.jube.images.fabric8</groupId>
          <artifactId>taiga</artifactId>
          <version>${fabric8.version}</version>
          <classifier>kubernetes</classifier>
          <type>json</type>
        </dependency>
        <dependency>
          <groupId>io.fabric8.jube.images.fabric8</groupId>
          <artifactId>orion</artifactId>
          <version>${fabric8.version}</version>
          <classifier>kubernetes</classifier>
          <type>json</type>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>cdelivery</id>
      <dependencies>
        <!-- CD building stuff -->
        <dependency>
          <groupId>io.fabric8.jube.images.fabric8</groupId>
          <artifactId>gerrit</artifactId>
          <!--version>${fabric8.version}</version>
      --> <version>2.3-SNAPSHOT</version>
         <classifier>kubernetes</classifier>
          <type>json</type>
        </dependency>
        <dependency>
          <groupId>io.fabric8.jube.images.fabric8</groupId>
          <artifactId>gogs</artifactId>
          <version>${fabric8.version}</version>
          <classifier>kubernetes</classifier>
          <type>json</type>
        </dependency>
        <dependency>
          <groupId>io.fabric8.jube.images.fabric8</groupId>
          <artifactId>nexus</artifactId>
          <version>${fabric8.version}</version>
          <classifier>kubernetes</classifier>
          <type>json</type>
        </dependency>
        <dependency>
          <groupId>io.fabric8.jube.images.fabric8</groupId>
          <artifactId>jenkins</artifactId>
          <!--version>${fabric8.version}</version>
      --> <version>2.3-SNAPSHOT</version>
           <classifier>kubernetes</classifier>
          <type>json</type>
        </dependency>
        <!-- project wizard -->
        <dependency>
          <groupId>io.fabric8.jube.images.fabric8</groupId>
          <artifactId>fabric8-forge</artifactId>
          <version>${fabric8.version}</version>
          <classifier>kubernetes</classifier>
          <type>json</type>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
